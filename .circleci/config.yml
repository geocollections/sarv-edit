version: 2
jobs:
  build:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocollections/sarv-edit
    steps:
      - checkout
      - attach_workspace:
          at: ~/geocollections/sarv-edit
      - restore_cache:
          keys:
            - v1.12-npm-deps-{{ checksum "package-lock.json" }}
            - v1.12-npm-deps-
          paths:
            - ./node_modules
            - ./package-lock.json
      - run:
          name: Installin packages
          command: npm install
      - save_cache:
          key: v1.12-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
            - ./package-lock.json
      - run:
          name: Building code
          command: npm run build
      - persist_to_workspace:
          root: .
          paths: dist
  deploy_to_development:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocollections/sarv-edit
    steps:
      - checkout
      - attach_workspace:
          at: ~/geocollections/sarv-edit
      - run:
          name: Directory update
          command: ssh -o "StrictHostKeyChecking no" -p ${PORT} ${USER}@${ADDRESS_1} 'cd /var/www/sarv-edit-dev/script && . directory_update.sh'
      - run:
          name: Copy built files to development
          command: scp -P ${PORT} -r dist/* ${USER}@${ADDRESS_1}:/var/www/sarv-edit-dev
  deploy_to_production:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocollections/sarv-edit
    steps:
      - checkout
      - attach_workspace:
          at: ~/geocollections/sarv-edit
      - run:
          name: SSH connection
          command: ssh -o "StrictHostKeyChecking no" -p ${PORT} ${USER}@${ADDRESS_1}
      - run:
          name: Copy built files to production
          command: scp -P ${PORT} -r dist/* ${USER}@${ADDRESS_1}:/var/www/sarv-edit


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy_to_developement:
          requires:
            - build
          filters:
            branches:
              only: development
      - deploy_to_production:
          requires:
            - build
          filters:
            branches:
              only: master
