version: 2.0

jobs:
  checkout_code:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocollections/sarv-edit
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/geocollections/sarv-edit

  bundle_dependencies:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocollections/sarv-edit
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-bundle-{{ checksum "package-lock.json" }}
      - run:
          name: Installing packages
          command: npm install
      - save_cache:
          key: v1-bundle-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
            - ./package-lock.json

  build_dependencies:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocollections/sarv-edit
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-bundle-{{ checksum "package-lock.json" }}
      - run:
          name: Building application
          command: npm run build
      - save_cache:
          key: v1-build-{{ checksum "package-lock.json" }}
          paths:
            - ~/geocollections/sarv-edit

  deploy_to_dev:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocollections/sarv-edit
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-bundle-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: v1-build-{{ checksum "package-lock.json" }}
      - add_ssh_keys:
          fingerprints:
            - "da:37:31:66:0f:b9:99:16:61:2a:af:0b:ec:e2:95:d5"
      - run:
          name: Add ssh key to known hosts
          command: ssh-keyscan ${ADDRESS_1} >> ~/.ssh/known_hosts
      - run:
          name: Directory update
          command: ssh -p ${PORT} ${USER}@${ADDRESS_1} 'cd /var/www/sarv-edit-dev/script && . directory_update.sh'
      - run:
          name: Copying built files to development
          command: scp -P ${PORT} -r dist/* ${USER}@${ADDRESS_1}:/var/www/sarv-edit-dev

  deploy_to_dev_2:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocollections/sarv-edit
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-bundle-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: v1-build-{{ checksum "package-lock.json" }}
      - add_ssh_keys:
          fingerprints:
            - "f7:03:80:ab:4d:82:59:7a:a2:2a:7e:7f:8f:4a:5d:b9"
      - run:
          name: Add ssh key to known hosts
          command: ssh-keyscan ${ADDRESS_2} >> ~/.ssh/known_hosts
      - run:
          name: Removing current production files
          command: ssh -p ${PORT} ${USER}@${ADDRESS_2} 'cd /var/www/sarv-edit && rm -rf css/ fonts/ img/ js/ favicon.ico index.html'
      - run:
          name: Copying built files to production
          command: scp -P ${PORT} -r dist/* ${USER}@${ADDRESS_2}:/var/www/sarv-edit

  deploy_to_prod:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocollections/sarv-edit
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-bundle-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: v1-build-{{ checksum "package-lock.json" }}
      - run:
          name: Removing current production files
          command: ssh -o "StrictHostKeyChecking no" -p ${PORT} ${USER}@${ADDRESS_1} 'cd /var/www/sarv-edit && rm -rf css/ fonts/ img/ js/ favicon.ico index.html'
      - run:
          name: Copying built files to production
          command: scp -P ${PORT} -r dist/* ${USER}@${ADDRESS_1}:/var/www/sarv-edit

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - checkout_code
      - bundle_dependencies:
          requires:
            - checkout_code
      - build_dependencies:
          requires:
            - bundle_dependencies
          filters:
            branches:
              only: [development, master]
      - deploy_to_dev:
          requires:
            - build_dependencies
          filters:
            branches:
              only: development
      - deploy_to_dev_2:
          requires:
            - build_dependencies
          filters:
            branches:
              only: development
      - deploy_to_prod:
          requires:
            - build_dependencies
          filters:
            branches:
              only: master
